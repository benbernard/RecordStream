name = App-RecordStream
author = Ben Bernard <perlhacker@benjaminbernard.com>
author = Keith Amling <keith.amling@gmail.com>
author = Thomas Sibley <tsibley@cpan.org>
license = Custom
copyright_holder = the AUTHORS

[CustomLicense]
[MetaResources]
homepage          = https://github.com/benbernard/RecordStream
bugtracker.web    = https://rt.cpan.org/Dist/Display.html?Name=App-RecordStream
bugtracker.mailto = bug-App-RecordStream@rt.cpan.org
repository.url    = https://github.com/benbernard/RecordStream.git
repository.web    = https://github.com/benbernard/RecordStream
repository.type   = git

[Run::BeforeBuild]
run = bash -c 'cpanm --installdeps --cpanfile <(./devel/author-testing-deps) .'
run = env GENERATING_STATIC_DOC=1 ./generate_pods.pl
run = ./devel/update-fatlib
run = ./devel/fatpack-recs

; The following configuration is based on Dist::Zilla::PluginBundle::Milla.

; The following stanzas ensure the git repo is installable by copying over
; installer-bits from the build and ignoring them when gathering files before
; the build.
[Git::GatherDir]
exclude_filename = dist.ini
exclude_filename = Makefile.PL
exclude_filename = META.json
exclude_filename = LICENSE
exclude_filename = LEGAL
exclude_filename = README.md
exclude_filename = recs
exclude_match    = ^(devel|local|fatlib)/

; Explicitly include the following dotfile for tests, which is skipped by
; Git::GatherDir above.
[GatherDir]
root = tests/files/.recs/
prefix = tests/files/.recs/

[PruneCruft]

[CopyFilesFromBuild]
copy = META.json
copy = LICENSE
copy = Makefile.PL

; Should stay after GatherDir
[RewriteVersion]
[ReversionOnRelease]
prompt = 1

[NextRelease]
format = %V  %{yyyy-MM-dd HH:mm:ss VVV}d%{ - TRIAL DEVELOPMENT RELEASE}T

[Git::Check]
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = README.md
allow_dirty = Makefile.PL
allow_dirty = LICENSE
allow_dirty = recs

[ReadmeAnyFromPod]
type = markdown
filename = README.md
location = root

[MetaNoIndex]
; the first three below shouldn't be in CPAN dists, but if they are mistakenly
; included, ignore em anyway!
dir = devel
dir = local
dir = fatlib
dir = tests
dir = t
dir = xt
dir = inc
dir = share
dir = eg
dir = examples
package = KeyspecRecorder
package = MockCursor
package = RecordingArray
package = RecordingHash

[Prereqs::FromCPANfile]

; FIXME: use the CoalescePod plugin once fixed to work on bin/
[MakeMaker::Awesome]
delimiter = |
WriteMakefile_arg = |MAN3PODS => { 'lib/App/RecordStream.pm'    => '$(INST_MAN3DIR)/RecordStream.3',
WriteMakefile_arg = |              'lib/App/RecordStream.pm'    => '$(INST_MAN3DIR)/recs.3',
WriteMakefile_arg = |              'lib/App/RecordStream/Manual/Examples.pm' => '$(INST_MAN3DIR)/recs-examples.3',
WriteMakefile_arg = |              'lib/App/RecordStream/Manual/Story.pm'    => '$(INST_MAN3DIR)/recs-story.3' },
WriteMakefile_arg = MAN1PODS => { map { m{doc/(.+)\.pod$} ? ($_ => "\$(INST_MAN1DIR)/$1.1") : () } grep { -f and not /recs-operation/ } <doc/recs-*.pod> }
; This causes the end-user build process to regenerate the doc/ by running generate_pods.pl
WriteMakefile_arg = depend   => { map { ($_ => "generate_pods") } grep { -f and not /recs-operation/ } <doc/recs-*.pod> }
WriteMakefile_arg = PL_FILES => { 'generate_pods.pl' => 'generate_pods' }

[Git::Contributors]

[PodSyntaxTests]
[MetaJSON]
[MetaYAML]
[License]
[ExtraTests]
[ExecDir]
dir = bin
[ShareDir]
[Manifest]
[ManifestSkip]

[CheckChangesHasContent]
[TestRelease]
[ConfirmRelease]
[UploadToCPAN]

[CopyFilesFromRelease]
match = \.pm$

; Update in-repo recs with new version from release
[Run::AfterRelease]
:version = 0.027
run = ./devel/fatpack-recs %v%t

[Git::Commit]
commit_msg  = %v%t
; dirty files allowed by Git::Check
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = README.md
allow_dirty = Makefile.PL
allow_dirty = LICENSE
; pm files copied back from release
allow_dirty_match = \.pm$
; updated in-tree recs
allow_dirty = recs

[Git::Tag]
tag_format  = %v%t
tag_message = version %v%t
signed = 1

[Git::Push]
remotes_must_exist = 0

; End of config based on Milla
